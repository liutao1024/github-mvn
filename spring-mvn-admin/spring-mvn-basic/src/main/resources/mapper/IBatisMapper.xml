<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.spring.mvn.basic.ibatis.IBatisDao">
	<!-- 一波说明 
		1.$()和#{}的区别:在于对拿到的参数做的处理,前者直接用后者会转成String(貌似因为之前出现过这个错误)
		2.insert标签
		3.select标签
		4.delete标签
		5.update标签
		6.choose标签
		7.when标签
		8.otherwise标签
		9.where标签
		10.foreach标签
		11.if标签
	 -->
    <!-- 根据SQL新增 -->
    <insert id="insertBySQL" parameterType="String">
        ${SQL}
    </insert>
    <!-- 根据类IBatisPageEntity新增 -->
    <insert id="insertByCondition" parameterType="IBatisTParam">
        <choose>
        	<when test="paramMap != null">
        		insert into #{tableName} 
        		<foreach item="value" index="key" collection="paramMap.entrySet()" open="(" separator="," close=")">
        			#{key}
        		</foreach>
        		values
        		<foreach item="value" index="key" collection="paramMap.entrySet()" open="(" separator="," close=")">
        			#{value}
        		</foreach>
        	</when>
        </choose>
    </insert>
    <!-- 根据SQL删除 -->
    <delete id="deleteBySQL" parameterType="String">
        ${SQL}
    </delete>
    <!-- 根据IBatisPageEntity做条件删除 -->
    <delete id="deleteByCondition" parameterType="IBatisTParam">
    	<choose><!-- 相当与if...else... -->
    		<when test="paramMap != null">
    			delete from #{tableName}
    			<where>
	    			<foreach item="value" index="key" collection="paramMap.entrySet()">
	    				and ${key} = ${value}
	    			</foreach>
    			</where>
    		</when>
    		<otherwise>
    		
    		</otherwise>
    	</choose>
    </delete>
   	<!-- 自定义语句查询 SQL在Java代码中组装-->
   	<select id="selectBySQL" parameterType="String" resultType="java.util.Map">
   		${SQL}
   	</select> 
   	<!-- 试探根据自定义类IBatisPageEntity在Mapper中组装SQL语句,resultType可能有问题,那就直接用Map了 -->
    <select id="selectByCondition" parameterType="IBatisTParam" resultType="java.util.Map">
    	select * from ${tableName}
    	<if test="paramMap != null">
	    	<where> 																		<!-- open="(" separator="),(" close=")" -->
	    		<foreach item="value" index="key" collection="paramMap.entrySet()"><!-- IBatisPageEntity中map的循环赋值 -->
	    			and ${key} = ${value}
	    		</foreach>
	    	</where>
    	</if>
    	<if test="orderColumn != null and orderColumn != ''">
    		order by ${orderColumn} #{orderTurn}
    	</if> 
    	<if test="(page != null and page != '' or page == 0) and size != null and size != ''">
       		limit ${page}, ${size}
   		</if>
    </select>
    <!-- 使用SQL计数 -->
    <select id="selectCountBySQL" resultType="Long">
    	${SQL}
    </select>
    <!-- 根据IBatisPageEntity做条件计数 -->
    <select id="selectCountByCondition" parameterType="IBatisTParam" resultType="Long">
    	select count(*) from #{tableName} 
    	<where>
    		<if test="paramMap != null">
    			<foreach item="value" index="key" collection="paramMap.entrySet()">
    				and ${key} = ${value}
    			</foreach>
    		</if>
    	</where>
    </select>
   	<!-- 根据SQL语句更新 -->
    <update id="updateBySQL" parameterType="String">
    	${SQL}
    </update>
    <!-- 根据IBatisPageEntity做条件更新 这个updaet不好写因为update时是有前置条件的,即where后跟主键 -->
    <!-- 主键PKMap有两种方式获取:1.实体类中主键属性加@Id注解,2.自己设置 -->
    <update id="updateByCondition" parameterType="IBatisTParam">
    	<choose>
    		<when test="paramMap != null and PKMap != null">
    			update #{tableName} set  
    			<foreach item="value" index="key" collection="paramMap.entrySet()" separator=",">
    				${key} = ${value}
    			</foreach>
    			<where><!-- 自动添加  where 1 = 1 ?-->
    				<foreach item="value" index="key" collection="PKMap.entrySet()">
    					and ${key} = ${value}
    				</foreach>
    			</where>
    		</when>
    	</choose> 
    </update>
 
</mapper>
