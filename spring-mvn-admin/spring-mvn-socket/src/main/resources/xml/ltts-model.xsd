<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="abstractEnumProvider" type="abstractEnumProvider"/>

  <xs:element name="andSqlNode" type="andSqlNode"/>

  <xs:element name="batchStep" type="batchStepConf"/>

  <xs:element name="batchStepGroup" type="batchStepGroupConf"/>

  <xs:element name="batch_transaction" type="batchTransactionConf"/>

  <xs:element name="complexType" type="defaultComplexType"/>

  <xs:element name="componentSchema">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="componentType" type="componentType"/>
          <xs:element name="componentImplementation" type="componentImplementation"/>
          <xs:element name="abstractComponentInstance" type="abstractComponentInstance"/>
          <xs:element name="componentInstance" type="componentInstanceConf"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="package" type="xs:string"/>
      <xs:attribute name="longname" type="xs:string"/>
      <xs:attribute name="desc" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="dataInterfaceField" type="dataInterfaceField"/>

  <xs:element name="dataInterfaceFields" type="dataInterfaceFields"/>

  <xs:element name="dataMappingDetail">
    <xs:complexType>
      <xs:sequence/>
      <xs:attribute name="src" type="xs:string"/>
      <xs:attribute name="dest" type="xs:string"/>
      <xs:attribute name="desc" type="xs:string"/>
      <xs:attribute name="dstype">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="tran"/>
            <xs:enumeration value="subtran"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="by_interface" type="xs:boolean"/>
      <xs:attribute name="on_top" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="dbIndex" type="dbIndex"/>

  <xs:element name="dbSequence" type="dbSequence"/>

  <xs:element name="ddl" type="ddl"/>

  <xs:element name="delete" type="delete"/>

  <xs:element name="dynamicDdl" type="dynamicDdl"/>

  <xs:element name="dynamicDelete" type="dynamicDelete"/>

  <xs:element name="dynamicSelect" type="dynamicSelect"/>

  <xs:element name="dynamicSqlSqlNode" type="dynamicSqlSqlNode"/>

  <xs:element name="dynamicUpdate" type="dynamicUpdate"/>

  <xs:element name="element" type="defaultElement"/>

  <xs:element name="enumeration" type="enumeration"/>

  <xs:element name="error">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="parameter" type="errorParameter" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="auth"/>
            <xs:enumeration value="warn"/>
            <xs:enumeration value="message"/>
            <xs:enumeration value="error"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="message" type="xs:string"/>
      <xs:attribute name="errorCode" type="xs:string"/>
      <xs:attribute name="description" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="errorConf">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
        <xs:element name="errors" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="description" type="xs:string" minOccurs="0"/>
              <xs:element ref="error" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string"/>
            <xs:attribute name="longname" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="longname" type="xs:string"/>
      <xs:attribute name="package" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="errorConfs">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
        <xs:element ref="error" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="longname" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="extensionConf" type="extensionConf"/>

  <xs:element name="extensionPointConf" type="extensionPointConf"/>

  <xs:element name="field" type="field"/>

  <xs:element name="file_batch_transaction" type="fileBatchTransactionConf"/>

  <xs:element name="flow" type="flowConf"/>

  <xs:element name="flowBlockNode" type="flowBlockNode"/>

  <xs:element name="flowCaseNode" type="flowCaseNode"/>

  <xs:element name="flowExitNode" type="flowExitNode"/>

  <xs:element name="flowExprNode" type="flowExprNode"/>

  <xs:element name="flowLoopNode" type="flowLoopNode"/>

  <xs:element name="flowMethodNode" type="flowMethodNode"/>

  <xs:element name="flowReportNode" type="flowReportNode"/>

  <xs:element name="flowServiceNode" type="flowServiceNode"/>

  <xs:element name="flowWhenNode" type="flowWhenNode"/>

  <xs:element name="flowtran" type="flowTransactionConf"/>

  <xs:element name="ifSqlNode" type="ifSqlNode"/>

  <xs:element name="index" type="odbIndex"/>

  <xs:element name="insert" type="insert"/>

  <xs:element name="module" type="moduleConf"/>

  <xs:element name="nullEnumProvider" type="nullEnumProvider"/>

  <xs:element name="orSqlNode" type="orSqlNode"/>

  <xs:element name="parameterMap" type="parameterMap"/>

  <xs:element name="plugin" type="pluginConf"/>

  <xs:element name="procedure" type="procedure"/>

  <xs:element name="report" type="report"/>

  <xs:element name="restrictionType" type="restrictionType"/>

  <xs:element name="resultMap" type="resultMap"/>

  <xs:element name="schema">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="complexType"/>
          <xs:element name="component" type="component"/>
          <xs:element ref="restrictionType"/>
          <xs:element name="subenum" type="subEnum"/>
          <xs:element ref="table"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="package" type="xs:string"/>
      <xs:attribute name="longname" type="xs:string"/>
      <xs:attribute name="classgen">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="normal"/>
            <xs:enumeration value="metadata"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="desc" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="select" type="select"/>

  <xs:element name="service">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
        <xs:element name="interface" type="dataInterface" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="longname" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="serviceImpl">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="longname" type="xs:string"/>
      <xs:attribute name="serviceType" type="xs:string"/>
      <xs:attribute name="class" type="xs:string"/>
      <xs:attribute name="package" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="serviceType">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" minOccurs="0"/>
        <xs:element ref="service" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string"/>
      <xs:attribute name="kind">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="interface"/>
            <xs:enumeration value="business"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="longname" type="xs:string"/>
      <xs:attribute name="package" type="xs:string"/>
      <xs:attribute name="class" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="sql" type="sql"/>

  <xs:element name="sqls" type="sqlGroup"/>

  <xs:element name="strSqlNode" type="strSqlNode"/>

  <xs:element name="subEnum" type="subEnum"/>

  <xs:element name="systemComponentConf" type="systemComponentConf"/>

  <xs:element name="table" type="table"/>

  <xs:element name="update" type="update"/>

  <xs:element name="webtran" type="webTransaction"/>

  <xs:element name="whereSqlNode" type="whereSqlNode"/>

  <xs:complexType name="flowTransactionConf">
    <xs:sequence>
      <xs:element name="error_prof" type="flowServiceNode" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
      <xs:element ref="flow" minOccurs="0"/>
      <xs:element name="outMapping" type="dataMapping" minOccurs="0"/>
      <xs:element name="propertyToPrinterMapping" type="dataMapping" minOccurs="0"/>
      <xs:element name="outToPrinterMapping" type="dataMapping" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="kind" type="xs:string"/>
    <xs:attribute name="package" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="flowServiceNode">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence>
          <xs:element name="in_mappings" type="dataMapping" minOccurs="0"/>
          <xs:element name="out_mappings" type="dataMapping" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="mappingToProperty" type="xs:boolean"/>
        <xs:attribute name="serviceName" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowNode" abstract="true">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="test" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="dataMapping">
    <xs:sequence>
      <xs:element name="mapping" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence/>
          <xs:attribute name="src" type="xs:string"/>
          <xs:attribute name="dest" type="xs:string"/>
          <xs:attribute name="desc" type="xs:string"/>
          <xs:attribute name="dstype">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="tran"/>
                <xs:enumeration value="subtran"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="by_interface" type="xs:boolean"/>
          <xs:attribute name="on_top" type="xs:boolean"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="by_interface" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="dataInterface">
    <xs:sequence>
      <xs:element name="input" minOccurs="0">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dataInterfaceElements">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="output" minOccurs="0">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dataInterfaceElements">
              <xs:sequence/>
              <xs:attribute name="asParm" type="xs:boolean"/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="property" minOccurs="0">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dataInterfaceElements">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="printer" minOccurs="0">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dataInterfaceElements">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="package" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="dataInterfaceElements" abstract="true">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="fields" type="dataInterfaceFields"/>
        <xs:element name="field" type="dataInterfaceField"/>
      </xs:choice>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="packMode" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="dataInterfaceFields">
    <xs:sequence>
      <xs:element name="depends" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="depend" type="depend" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="fields" type="dataInterfaceFields"/>
        <xs:element name="field" type="dataInterfaceField"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="alias" type="xs:string"/>
    <xs:attribute name="scope" type="xs:string"/>
    <xs:attribute name="required" type="xs:boolean"/>
    <xs:attribute name="multi" type="xs:boolean"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="array" type="xs:boolean"/>
    <xs:attribute name="relation" type="xs:string"/>
    <xs:attribute name="values" type="xs:string"/>
    <xs:attribute name="cascade" type="cascade"/>
    <xs:attribute name="lazyLoad" type="xs:boolean"/>
    <xs:attribute name="property" type="xs:string"/>
    <xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="depend">
    <xs:complexContent>
      <xs:extension base="rule">
        <xs:sequence/>
        <xs:attribute name="message" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rule">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="mvel" type="mvel"/>
        <xs:element name="javascript" type="javascript"/>
        <xs:element name="or" type="or"/>
        <xs:element name="and" type="and"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="not" type="xs:boolean"/>
    <xs:attribute name="when" type="xs:string"/>
    <xs:attribute name="op" type="operateType"/>
    <xs:attribute name="val" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="mvel">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:simpleType name="javascript">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:complexType name="or">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="rule" type="rule"/>
        <xs:element name="or" type="or"/>
        <xs:element name="and" type="and"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="and">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="rule" type="rule"/>
        <xs:element name="or" type="or"/>
        <xs:element name="and" type="and"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="validation">
    <xs:complexContent>
      <xs:extension base="rule">
        <xs:sequence/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="method" type="xs:string"/>
        <xs:attribute name="target" type="xs:string"/>
        <xs:attribute name="message" type="xs:string"/>
        <xs:attribute name="ajax" type="xs:boolean"/>
        <xs:attribute name="errorCode" type="xs:string"/>
        <xs:attribute name="depends">
          <xs:simpleType>
            <xs:list itemType="xs:string"/>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="expressionRule">
    <xs:complexContent>
      <xs:extension base="rule">
        <xs:sequence/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="target" type="xs:string"/>
        <xs:attribute name="top" type="operateType"/>
        <xs:attribute name="tval" type="xs:string"/>
        <xs:attribute name="errorCode" type="xs:string"/>
        <xs:attribute name="ajax" type="xs:boolean"/>
        <xs:attribute name="message" type="xs:string"/>
        <xs:attribute name="depends">
          <xs:simpleType>
            <xs:list itemType="xs:string"/>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataInterfaceField">
    <xs:sequence>
      <xs:element name="depends" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="depend" type="depend" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="alias" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="required" type="xs:boolean"/>
    <xs:attribute name="enums" type="xs:string"/>
    <xs:attribute name="fixed" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="multi" type="xs:boolean"/>
    <xs:attribute name="array" type="xs:boolean"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="alias_name" type="xs:string"/>
    <xs:attribute name="additionalType" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="lazyLoad" type="xs:boolean"/>
    <xs:attribute name="cascade" type="cascade"/>
    <xs:attribute name="values" type="xs:string"/>
    <xs:attribute name="relation" type="xs:string"/>
    <xs:attribute name="desplay" type="xs:boolean"/>
    <xs:attribute name="ref" type="xs:string"/>
    <xs:attribute name="property" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="flowConf">
    <xs:complexContent>
      <xs:extension base="flowCompositeNode">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowCompositeNode" abstract="true">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="case" type="flowCaseNode"/>
            <xs:element name="loop" type="flowLoopNode"/>
            <xs:element name="block" type="flowBlockNode"/>
            <xs:element name="expr" type="flowExprNode"/>
            <xs:element name="method" type="flowMethodNode"/>
            <xs:element name="report" type="flowReportNode"/>
            <xs:element name="service" type="flowServiceNode"/>
            <xs:element name="exit" type="flowExitNode"/>
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowCaseNode">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence>
          <xs:element name="when" type="flowWhenNode" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowWhenNode">
    <xs:complexContent>
      <xs:extension base="flowCompositeNode">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowLoopNode">
    <xs:complexContent>
      <xs:extension base="flowCompositeNode">
        <xs:sequence/>
        <xs:attribute name="mode">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="times"/>
              <xs:enumeration value="do-while"/>
              <xs:enumeration value="while-do"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowBlockNode">
    <xs:complexContent>
      <xs:extension base="flowCompositeNode">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowExprNode">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence/>
        <xs:attribute name="expr" type="xs:string"/>
        <xs:attribute name="mode">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="invalid"/>
              <xs:enumeration value="valid"/>
              <xs:enumeration value="eval"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowMethodNode">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence/>
        <xs:attribute name="method" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowReportNode">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence>
          <xs:element name="in_mappings" type="dataMapping" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="reportId" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flowExitNode">
    <xs:complexContent>
      <xs:extension base="flowNode">
        <xs:sequence/>
        <xs:attribute name="label" type="xs:string"/>
        <xs:attribute name="mode">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="break"/>
              <xs:enumeration value="return"/>
              <xs:enumeration value="continue"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sqlGroup">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="select"/>
        <xs:element ref="dynamicSelect"/>
        <xs:element ref="insert"/>
        <xs:element ref="delete"/>
        <xs:element ref="dynamicDelete"/>
        <xs:element ref="update"/>
        <xs:element ref="dynamicUpdate"/>
        <xs:element ref="procedure"/>
        <xs:element ref="ddl"/>
        <xs:element ref="dynamicDdl"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="datasource" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="package" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="select">
    <xs:complexContent>
      <xs:extension base="statement">
        <xs:sequence>
          <xs:element ref="resultMap" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="cache">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="none"/>
              <xs:enumeration value="trans"/>
              <xs:enumeration value="global"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="method">
          <xs:simpleType>
            <xs:list>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="selectOne"/>
                  <xs:enumeration value="selectFirst"/>
                  <xs:enumeration value="selectAll"/>
                  <xs:enumeration value="selectPage"/>
                  <xs:enumeration value="selectPageWithCount"/>
                  <xs:enumeration value="selectPageWithCount_mds"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:list>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="type">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="sql"/>
              <xs:enumeration value="proc"/>
              <xs:enumeration value="ognl"/>
              <xs:enumeration value="java"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="statement">
    <xs:sequence>
      <xs:element ref="sql" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="parameterMap" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="datasource" type="xs:string"/>
    <xs:attribute name="timeout" type="xs:int"/>
    <xs:attribute name="implType" type="implType"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="changelog" type="changeLog"/>
  </xs:complexType>

  <xs:complexType name="resultMap">
    <xs:sequence>
      <xs:element name="result" type="result" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="saveMapping" type="xs:boolean"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="result">
    <xs:sequence/>
    <xs:attribute name="property" type="xs:string"/>
    <xs:attribute name="javaType" type="xs:string"/>
    <xs:attribute name="jdbcType" type="jdbcType"/>
    <xs:attribute name="column" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="primaryKey" type="xs:boolean"/>
    <xs:attribute name="relation" type="xs:string"/>
    <xs:attribute name="values" type="xs:string"/>
    <xs:attribute name="cascade" type="cascade"/>
    <xs:attribute name="lazyLoad" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="sql">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" type="dbType"/>
        <xs:attribute name="desc" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="parameterMap">
    <xs:sequence>
      <xs:element name="longname" type="xs:string" minOccurs="0"/>
      <xs:element name="parameter" type="parameter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="class" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="parameter">
    <xs:sequence>
      <xs:element name="result" type="result" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="property" type="xs:string"/>
    <xs:attribute name="ref" type="xs:string"/>
    <xs:attribute name="jdbcType" type="jdbcType"/>
    <xs:attribute name="javaType" type="xs:string"/>
    <xs:attribute name="mode" type="mode"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="nullValue" type="xs:string"/>
    <xs:attribute name="numericScale" type="xs:int"/>
    <xs:attribute name="parameterType" type="parameterType"/>
    <xs:attribute name="typeName" type="xs:string"/>
    <xs:attribute name="relation" type="xs:string"/>
    <xs:attribute name="values" type="xs:string"/>
    <xs:attribute name="cascade" type="cascade"/>
    <xs:attribute name="lazyLoad" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="dynamicSelect">
    <xs:complexContent>
      <xs:extension base="select">
        <xs:sequence>
          <xs:element name="dynamicSql" type="dynamicSqlSqlNode" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dynamicSqlSqlNode">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="if" type="ifSqlNode"/>
        <xs:element name="str" type="strSqlNode"/>
        <xs:element name="where" type="whereSqlNode"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="type" type="dbType"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ifSqlNode">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="str" type="strSqlNode"/>
        <xs:element name="if" type="ifSqlNode"/>
        <xs:element name="or" type="orSqlNode"/>
        <xs:element name="and" type="andSqlNode"/>
        <xs:element name="where" type="whereSqlNode"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="test" type="xs:string"/>
    <xs:attribute name="type" type="logicType"/>
  </xs:complexType>

  <xs:complexType name="strSqlNode">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="test" type="xs:string"/>
        <xs:attribute name="type" type="logicType"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="orSqlNode">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="str" type="strSqlNode"/>
        <xs:element name="if" type="ifSqlNode"/>
        <xs:element name="or" type="orSqlNode"/>
        <xs:element name="and" type="andSqlNode"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="type" type="logicType"/>
  </xs:complexType>

  <xs:complexType name="andSqlNode">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="str" type="strSqlNode"/>
        <xs:element name="if" type="ifSqlNode"/>
        <xs:element name="or" type="orSqlNode"/>
        <xs:element name="and" type="andSqlNode"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="type" type="logicType"/>
  </xs:complexType>

  <xs:complexType name="whereSqlNode">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="str" type="strSqlNode"/>
        <xs:element name="if" type="ifSqlNode"/>
        <xs:element name="and" type="andSqlNode"/>
        <xs:element name="or" type="orSqlNode"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="type" type="logicType"/>
  </xs:complexType>

  <xs:complexType name="insert">
    <xs:complexContent>
      <xs:extension base="statement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="delete">
    <xs:complexContent>
      <xs:extension base="statement">
        <xs:sequence/>
        <xs:attribute name="method" type="deleteMethod"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dynamicDelete">
    <xs:complexContent>
      <xs:extension base="delete">
        <xs:sequence>
          <xs:element name="dynamicSql" type="dynamicSqlSqlNode" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="update">
    <xs:complexContent>
      <xs:extension base="statement">
        <xs:sequence/>
        <xs:attribute name="method" type="updateMethod"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dynamicUpdate">
    <xs:complexContent>
      <xs:extension base="update">
        <xs:sequence>
          <xs:element name="dynamicSql" type="dynamicSqlSqlNode" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="procedure">
    <xs:complexContent>
      <xs:extension base="statement">
        <xs:sequence>
          <xs:element ref="resultMap" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="method" type="procMethod"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ddl">
    <xs:complexContent>
      <xs:extension base="statement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dynamicDdl">
    <xs:complexContent>
      <xs:extension base="ddl">
        <xs:sequence>
          <xs:element name="dynamicSql" type="dynamicSqlSqlNode" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="defaultComplexType">
    <xs:sequence>
      <xs:element name="odbindexes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="index" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element ref="element" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="extension">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="dict" type="xs:boolean"/>
    <xs:attribute name="abstract" type="xs:boolean"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="category" type="xs:string"/>
    <xs:attribute name="introduct" type="xs:boolean"/>
    <xs:attribute name="store">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="tags">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="odbIndex">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="type">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="primarykey"/>
          <xs:enumeration value="unique"/>
          <xs:enumeration value="index"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fields">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="sort" type="xs:string"/>
    <xs:attribute name="operate">
      <xs:simpleType>
        <xs:list>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="selectFirst"/>
              <xs:enumeration value="selectOne"/>
              <xs:enumeration value="selectOneWithLock"/>
              <xs:enumeration value="selectAll"/>
              <xs:enumeration value="selectPage"/>
              <xs:enumeration value="selectPageWithCount"/>
              <xs:enumeration value="selectCursor"/>
              <xs:enumeration value="updateOne"/>
              <xs:enumeration value="update"/>
              <xs:enumeration value="deleteOne"/>
              <xs:enumeration value="delete"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:list>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="cache">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="global"/>
          <xs:enumeration value="trans"/>
          <xs:enumeration value="none"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="clazz" type="xs:string"/>
    <xs:attribute name="wildcard" type="xs:string"/>
    <xs:attribute name="expr" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="defaultElement">
    <xs:sequence>
      <xs:element name="depends" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="depend" type="depend" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="alias" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="ref" type="xs:string"/>
    <xs:attribute name="required" type="xs:boolean"/>
    <xs:attribute name="key" type="xs:boolean"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="multi" type="xs:boolean"/>
    <xs:attribute name="range" type="xs:boolean"/>
    <xs:attribute name="array" type="xs:boolean"/>
    <xs:attribute name="fixed" type="xs:string"/>
    <xs:attribute name="final" type="xs:boolean"/>
    <xs:attribute name="property" type="xs:string"/>
    <xs:attribute name="override" type="xs:boolean"/>
    <xs:attribute name="xmlValue" type="xs:boolean"/>
    <xs:attribute name="allowSubType" type="xs:boolean"/>
    <xs:attribute name="relation" type="xs:string"/>
    <xs:attribute name="values" type="xs:string"/>
    <xs:attribute name="cascade" type="cascade"/>
    <xs:attribute name="lazyLoad" type="xs:boolean"/>
    <xs:attribute name="hypotactic" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="component">
    <xs:sequence>
      <xs:element ref="element" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="abstract" type="xs:boolean"/>
    <xs:attribute name="type" type="type"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="extension">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="layoutData" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="category" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="if" type="xs:string"/>
    <xs:attribute name="tags">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="restrictionType">
    <xs:sequence>
      <xs:element ref="enumeration" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subenums" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="subenum" type="subEnum" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="abstractEnumProvider"/>
        <xs:element ref="nullEnumProvider"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="base" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="tags" type="xs:string"/>
    <xs:attribute name="pattern" type="xs:string"/>
    <xs:attribute name="maxLength" type="xs:int"/>
    <xs:attribute name="minLength" type="xs:int"/>
    <xs:attribute name="fractionDigits" type="xs:int"/>
    <xs:attribute name="dbLength" type="xs:int"/>
    <xs:attribute name="dbFractionDigits" type="xs:int"/>
    <xs:attribute name="byCharacter" type="xs:boolean"/>
    <xs:attribute name="maxInclusive" type="xs:string"/>
    <xs:attribute name="maxExclusive" type="xs:string"/>
    <xs:attribute name="minInclusive" type="xs:string"/>
    <xs:attribute name="minExclusive" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="enumeration">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="value" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="subEnum">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="abstractEnumProvider"/>
        <xs:element ref="nullEnumProvider"/>
      </xs:choice>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="base" type="xs:string"/>
    <xs:attribute name="enums" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="abstractEnumProvider" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="table">
    <xs:sequence>
      <xs:element name="fields" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="field" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element ref="sqls" minOccurs="0"/>
      <xs:element ref="dbSequence" minOccurs="0"/>
      <xs:element name="ddls" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ddl" type="ddlfrag" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="odbindexes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="index" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="indexes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="index" type="dbIndex" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="param" type="xs:boolean"/>
    <xs:attribute name="category" type="xs:string"/>
    <xs:attribute name="virtual" type="xs:boolean"/>
    <xs:attribute name="extension">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="changelog" type="xs:boolean"/>
    <xs:attribute name="datasource" type="xs:string"/>
    <xs:attribute name="locktype" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="abstract" type="xs:boolean"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="tags">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="field">
    <xs:sequence>
      <xs:element name="depends" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="depend" type="depend" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validations" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="validation" type="validation"/>
              <xs:element name="expression" type="expressionRule"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="ref" type="xs:string"/>
    <xs:attribute name="primarykey" type="xs:boolean"/>
    <xs:attribute name="encryptType" type="xs:string"/>
    <xs:attribute name="encryptFactor">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="length" type="xs:int"/>
    <xs:attribute name="fraction" type="xs:int"/>
    <xs:attribute name="final" type="xs:boolean"/>
    <xs:attribute name="property" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="fixed" type="xs:string"/>
    <xs:attribute name="nullable" type="xs:boolean"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="index">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="primarykey"/>
          <xs:enumeration value="unique"/>
          <xs:enumeration value="index"/>
          <xs:enumeration value="none"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="indexName" type="xs:string"/>
    <xs:attribute name="identity" type="xs:boolean"/>
    <xs:attribute name="allowSubType" type="xs:boolean"/>
    <xs:attribute name="relation" type="xs:string"/>
    <xs:attribute name="values" type="xs:string"/>
    <xs:attribute name="cascade" type="cascade"/>
    <xs:attribute name="lazyLoad" type="xs:boolean"/>
    <xs:attribute name="hypotactic" type="xs:boolean"/>
    <xs:attribute name="multi" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="dbSequence">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="startWith" type="xs:long"/>
    <xs:attribute name="minValue" type="xs:long"/>
    <xs:attribute name="maxValue" type="xs:long"/>
    <xs:attribute name="incrementBy" type="xs:long"/>
    <xs:attribute name="cycle" type="xs:boolean"/>
    <xs:attribute name="cache" type="xs:long"/>
  </xs:complexType>

  <xs:complexType name="ddlfrag">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="dbType" type="dbType"/>
        <xs:attribute name="depend" type="xs:boolean"/>
        <xs:attribute name="description" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="dbIndex">
    <xs:sequence>
      <xs:element name="ddls" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ddl" type="ddlfrag" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="type">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="primarykey"/>
          <xs:enumeration value="unique"/>
          <xs:enumeration value="index"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fields" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="moduleConf">
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultAccess" type="xs:boolean" minOccurs="0"/>
      <xs:element name="version" type="xs:string" minOccurs="0"/>
      <xs:element name="provider" type="xs:string" minOccurs="0"/>
      <xs:element name="desc" type="xs:string" minOccurs="0"/>
      <xs:element name="dependencies" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="module" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="accessPatterns" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="pattern" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="webTransaction">
    <xs:sequence>
      <xs:element name="actions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="action" type="action" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="tags" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="resourcePath" type="xs:string"/>
    <xs:attribute name="package" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="handler" type="xs:string"/>
    <xs:attribute name="transExecutor" type="xs:string"/>
    <xs:attribute name="webtranPath" type="xs:string"/>
    <xs:attribute name="description" type="xs:string"/>
    <xs:attribute name="abstract" type="xs:boolean"/>
    <xs:attribute name="extension">
      <xs:simpleType>
        <xs:list itemType="xs:string"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="action">
    <xs:sequence>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
      <xs:element name="result" type="webResult" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="flowNode" type="xs:string"/>
    <xs:attribute name="txnid" type="xs:string"/>
    <xs:attribute name="transExecutor" type="xs:string"/>
    <xs:attribute name="tags" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="alias" type="xs:string"/>
    <xs:attribute name="loginedVisit" type="xs:boolean"/>
    <xs:attribute name="permCheck" type="xs:boolean"/>
    <xs:attribute name="regtsq" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="webResult">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="type" type="resultType"/>
        <xs:attribute name="noframe" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="nullEnumProvider">
    <xs:complexContent>
      <xs:extension base="abstractEnumProvider">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="errorParameter">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="report">
    <xs:sequence>
      <xs:element name="control" type="reportControl" minOccurs="0"/>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="description" type="xs:string"/>
    <xs:attribute name="jaspertemplate" type="xs:string"/>
    <xs:attribute name="namepattern" type="xs:string"/>
    <xs:attribute name="filenamepattern" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="dataItem" type="xs:string"/>
    <xs:attribute name="assDataItem" type="xs:string"/>
    <xs:attribute name="pageWidth" type="xs:int" use="required"/>
    <xs:attribute name="pageHeight" type="xs:int" use="required"/>
    <xs:attribute name="package" type="xs:string"/>
    <xs:attribute name="reportType" type="reportType"/>
  </xs:complexType>

  <xs:complexType name="reportControl">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="genfreq" type="freqEnum"/>
    <xs:attribute name="controlTable" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="batchTransactionConf">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="dataItem" type="xs:string"/>
    <xs:attribute name="jobDataItem" type="xs:string"/>
    <xs:attribute name="package" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="batchStepConf">
    <xs:sequence>
      <xs:element name="splitKeys" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="splitKey" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence/>
                <xs:attribute name="value" type="xs:string"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobSplitConditions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="jobSplitCondition" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence/>
                <xs:attribute name="end" type="xs:int"/>
                <xs:attribute name="jobNum" type="xs:int"/>
                <xs:attribute name="start" type="xs:int"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="groupId" type="xs:string"/>
    <xs:attribute name="step" type="xs:int"/>
    <xs:attribute name="transactionId" type="xs:string"/>
    <xs:attribute name="canRun" type="xs:boolean"/>
    <xs:attribute name="retryCount" type="xs:int"/>
    <xs:attribute name="interruptWhenError" type="xs:boolean"/>
    <xs:attribute name="commitInterval" type="xs:int"/>
    <xs:attribute name="logLevel" type="xs:int"/>
    <xs:attribute name="fetchSize" type="xs:int"/>
    <xs:attribute name="splitMode">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="split_by_key"/>
          <xs:enumeration value="split_by_hash_mod"/>
          <xs:enumeration value="no_split"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="jobRunMode">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="single_thread"/>
          <xs:enumeration value="one_for_one"/>
          <xs:enumeration value="thread_pool_one_jvm"/>
          <xs:enumeration value="thread_pool_multi_jvm"/>
          <xs:enumeration value="thread_pool_multi_jvm_by_discovery"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="runMode">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="two_process"/>
          <xs:enumeration value="default"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="batchStepGroupConf">
    <xs:sequence>
      <xs:element name="batchSteps" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="batchStep" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="componentType">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="service" type="componentService" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="componentService">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
      <xs:element name="exceptions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="exception" type="serviceError" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="serviceError">
    <xs:sequence/>
    <xs:attribute name="code" type="xs:string"/>
    <xs:attribute name="message" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="componentImplementation">
    <xs:sequence>
      <xs:element name="implementation.java" type="implementation" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="properties" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="property" type="ComponentImplementationProperty" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="implementation">
    <xs:sequence/>
    <xs:attribute name="class" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ComponentImplementationProperty">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="abstractComponentInstance">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="componentInstanceConf">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="properties" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="property" type="ComponentInstanceProperty" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="abstract" type="xs:string"/>
    <xs:attribute name="implementation" type="xs:string"/>
    <xs:attribute name="singleton" type="xs:boolean"/>
    <xs:attribute name="synchronous" type="xs:boolean"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ComponentInstanceProperty">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="value" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="pluginConf">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="extension-points" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="point" type="extensionPointConf" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="extensions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="extension" type="extensionConf" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="components" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="component" type="systemComponentConf" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="displayName" type="xs:string"/>
    <xs:attribute name="activator" type="xs:string"/>
    <xs:attribute name="order" type="xs:int"/>
    <xs:attribute name="enable" type="xs:boolean"/>
    <xs:attribute name="failOnInitError" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="extensionPointConf">
    <xs:sequence>
      <xs:element name="clazz" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="pointType" type="extensionPointType"/>
  </xs:complexType>

  <xs:complexType name="extensionConf">
    <xs:sequence>
      <xs:element name="clazzImpl" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="point" type="xs:string"/>
    <xs:attribute name="enable" type="xs:boolean"/>
    <xs:attribute name="singleton" type="xs:boolean"/>
    <xs:attribute name="errorProcessMode" type="errorProcessMode"/>
  </xs:complexType>

  <xs:complexType name="systemComponentConf">
    <xs:sequence>
      <xs:element name="extensions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="extension" type="extensionConf" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="enable" type="xs:boolean"/>
    <xs:attribute name="displayName" type="xs:string"/>
    <xs:attribute name="failOnInitError" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="fileBatchTransactionConf">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="fileTemplate" type="fileTemplateConf" minOccurs="0"/>
      <xs:element name="interface" type="dataInterface" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="kind" type="fileKind"/>
    <xs:attribute name="package" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="fileTemplateConf">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="header" type="fileContent" minOccurs="0"/>
      <xs:element name="body" type="fileContent" minOccurs="0"/>
      <xs:element name="foot" type="fileContent" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="mode" type="fileMode"/>
    <xs:attribute name="splitor" type="xs:string"/>
    <xs:attribute name="splitorAsEnd" type="xs:boolean"/>
    <xs:attribute name="encoding" type="xs:string"/>
    <xs:attribute name="package" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="fileContent">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="field" type="fileField" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="mapping" type="xs:string"/>
    <xs:attribute name="mode" type="fileMode"/>
    <xs:attribute name="prefix" type="xs:string"/>
    <xs:attribute name="suffix" type="xs:string"/>
    <xs:attribute name="class" type="xs:string"/>
    <xs:attribute name="startline" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="fileField">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="type" type="xs:string"/>
    <xs:attribute name="fixed" type="xs:string"/>
    <xs:attribute name="default" type="xs:string"/>
    <xs:attribute name="longname" type="xs:string"/>
    <xs:attribute name="length" type="xs:int"/>
    <xs:attribute name="leftPadding" type="xs:boolean"/>
    <xs:attribute name="padding" type="xs:string"/>
    <xs:attribute name="desc" type="xs:string"/>
    <xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="operateType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="lt"/>
      <xs:enumeration value="gt"/>
      <xs:enumeration value="eq"/>
      <xs:enumeration value="neq"/>
      <xs:enumeration value="in"/>
      <xs:enumeration value="notIn"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cascade">
    <xs:restriction base="xs:string">
      <xs:enumeration value="insert"/>
      <xs:enumeration value="update"/>
      <xs:enumeration value="delete"/>
      <xs:enumeration value="save"/>
      <xs:enumeration value="all"/>
      <xs:enumeration value="none"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="jdbcType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="VARCHAR"/>
      <xs:enumeration value="BIGINT"/>
      <xs:enumeration value="BOOLEAN"/>
      <xs:enumeration value="CHAR"/>
      <xs:enumeration value="DATALINK"/>
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="DECIMAL"/>
      <xs:enumeration value="DOUBLE"/>
      <xs:enumeration value="FLOAT"/>
      <xs:enumeration value="INTEGER"/>
      <xs:enumeration value="LONGVARBINARY"/>
      <xs:enumeration value="LONGVARCHAR"/>
      <xs:enumeration value="NUMERIC"/>
      <xs:enumeration value="REAL"/>
      <xs:enumeration value="SMALLINT"/>
      <xs:enumeration value="TIME"/>
      <xs:enumeration value="TIMESTAMP"/>
      <xs:enumeration value="CURSOR"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="implType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="jdbc"/>
      <xs:enumeration value="temp"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dbType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="oracle"/>
      <xs:enumeration value="db2"/>
      <xs:enumeration value="db2as400"/>
      <xs:enumeration value="sybase"/>
      <xs:enumeration value="mysql"/>
      <xs:enumeration value="hsql"/>
      <xs:enumeration value="unknown"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="mode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="in"/>
      <xs:enumeration value="out"/>
      <xs:enumeration value="inout"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="parameterType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="condition"/>
      <xs:enumeration value="modefied"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="changeLog">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="simple"/>
      <xs:enumeration value="complete"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="logicType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Str"/>
      <xs:enumeration value="If"/>
      <xs:enumeration value="Where"/>
      <xs:enumeration value="And"/>
      <xs:enumeration value="Or"/>
      <xs:enumeration value="Set"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="deleteMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="deleteOne"/>
      <xs:enumeration value="delete"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="updateMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="updateOne"/>
      <xs:enumeration value="update"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="procMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="query"/>
      <xs:enumeration value="normal"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="java"/>
      <xs:enumeration value="xml"/>
      <xs:enumeration value="ftl"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="resultType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="xml"/>
      <xs:enumeration value="jsp"/>
      <xs:enumeration value="html"/>
      <xs:enumeration value="none"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="freqEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="day"/>
      <xs:enumeration value="week"/>
      <xs:enumeration value="tenday"/>
      <xs:enumeration value="month"/>
      <xs:enumeration value="season"/>
      <xs:enumeration value="halfyear"/>
      <xs:enumeration value="year"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="reportType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="pdf"/>
      <xs:enumeration value="txt"/>
      <xs:enumeration value="html"/>
      <xs:enumeration value="rtf"/>
      <xs:enumeration value="excel"/>
      <xs:enumeration value="xml"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="extensionPointType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="replace"/>
      <xs:enumeration value="additional"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="errorProcessMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ignore"/>
      <xs:enumeration value="logError"/>
      <xs:enumeration value="throwError"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileKind">
    <xs:restriction base="xs:string">
      <xs:enumeration value="read"/>
      <xs:enumeration value="write"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="fix"/>
      <xs:enumeration value="splitor"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>